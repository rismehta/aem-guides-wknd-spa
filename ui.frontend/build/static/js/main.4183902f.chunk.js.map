{"version":3,"sources":["App.js","LocalDevModelClient.js","components/Page/Page.js","components/RouteHelper/RouteHelper.js","components/Text/Text.js","utils/extract-model-id.js","components/AdaptiveForm/AdaptiveForm.js","components/AdaptiveForm/components/TextField.js","components/AdaptiveForm/components/Panel.js","components/AdaptiveForm/components/Button.js","index.js"],"names":["App","props","LocalDevModelClient","ModelClient","fetch","modelPath","err","Promise","reject","Error","apihostPrefix","this","_apiHost","credentials","headers","process","then","response","status","json","catch","error","require","MapTo","WrappedComponent","className","Component","render","routePath","cqPath","extension","exact","path","routeProps","TextEditConfig","emptyLabel","isEmpty","text","trim","length","Text","richText","id","replace","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","richTextContent","config","FormContainerEditConfig","cqItems","model","form","createFormInstance","getState","Provider","value","modelId","getUniqueId","properties","label","InputWrapper","size","showPassword","autoComplete","errorBorderColor","type","InputGroupWrapper","inputTypePassword","handlerShowHidePassword","width","h","onClick","TextFieldComponent","format","required","readOnly","maxLength","placeholder","description","errorMessage","inputType","show","setShow","React","useState","keyChangeFn","event","thisVal","target","textValLen","keyCode","zipCheck","newVal","onChange","checkIsValidField","undefined","component","onBlur","isReadOnly","isRequired","onKeyDown","isInvalid","visible","mb","htmlFor","color","TextFieldComp","isInEditor","state","handlers","useRuleEngine","convertedProps","dispatchChange","TextFieldEditConfig","newProps","AuthoringUtils","layout","columns","PanelEditConfig","columnGap","colorScheme","ButtonComponent","enabled","height","marginTnB","border","disabled","mt","ButtonCompWrapper","dispatchClick","ButtonEditConfig","modelManagerOptions","document","addEventListener","ModelManager","initialize","pageModel","history","createBrowserHistory","cqChildren","Constants","CHILDREN_PROP","ITEMS_PROP","cqItemsOrder","ITEMS_ORDER_PROP","PATH_PROP","locationPathname","window","location","pathname","getElementById"],"mappings":"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","file":"static/js/main.4183902f.chunk.js","sourcesContent":["import { Page } from '@adobe/aem-react-editable-components';\nimport React from 'react';\n\n/**\n * This component is the application entry point.\n *\n * Optionally the index.js's use of <App ../> can be replaced with <Page ../>\n *\n * We'll keep this broken out in case we need to do more complex App-level configurations\n * like setting context, etc.\n */\nconst App = (props) => (\n    <Page {...props}/>\n)\n\nexport default App;","import {ModelClient} from '@adobe/aem-spa-page-model-manager';\n\n/**\n * Used to make react-server possible (localhost development).\n */\nexport default class LocalDevModelClient extends ModelClient{\n\n    fetch(modelPath) {\n\n        if (!modelPath) {\n            const err = `Fetching model rejected for path: ${modelPath}`;\n\n            return Promise.reject(new Error(err));\n        }\n\n        // Either the API host has been provided or we make an absolute request relative to the current host\n        const apihostPrefix = this._apiHost || '';\n        const url = `${apihostPrefix}${modelPath}`;\n\n        return fetch(url, {\n            credentials: 'same-origin',\n            headers: {\n                'Authorization': process.env.REACT_APP_AEM_AUTHORIZATION_HEADER\n            }\n        }).then((response) => {\n            if ((response.status >= 200) && (response.status < 300)) {\n                return response.json() ;\n            }\n\n            return Promise.reject(response);\n        }).catch((error) => {\n            return Promise.reject(error);\n        });\n\n    }\n\n}","/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2020 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nimport {\n  MapTo,\n  Page\n} from '@adobe/aem-react-editable-components';\nimport { withRoute } from '../RouteHelper/RouteHelper';\nimport React from 'react';\n\nrequire('./Page.css');\n\n// This component is a variant of a Page component mapped to the\n// \"wknd-spa-react/components/page\" resource type. For now, the rendering is\n// the same as the RootPage; this is more for illustration purposes\nconst AppPage = (props) => {\n  return <Page {...props} className={props.className || ` page` }/>\n}\n\nexport default MapTo('wknd-spa-react-latest/components/page')(\n    withRoute(AppPage)\n);\n","/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2020 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\n/**\n * Helper that facilitate the use of the {@link Route} component\n */\n\n/**\n * Returns a composite component where a {@link Route} component wraps the provided component\n *\n * @param {React.Component} WrappedComponent    - React component to be wrapped\n * @param {string} [extension=html]             - extension used to identify a route amongst the tree of resource URLs\n * @returns {CompositeRoute}\n */\nexport const withRoute = (WrappedComponent, extension) => {\n  return class CompositeRoute extends Component {\n    render() {\n      let routePath = this.props.cqPath;\n      if (!routePath) {\n        return <WrappedComponent {...this.props} />;\n      }\n\n      extension = extension || 'html';\n\n      // Context path + route path + extension\n      return (\n        <Route\n          key={routePath}\n          exact\n          path={'(.*)' + routePath + '(.' + extension + ')?'}\n          render={routeProps => {\n            return <WrappedComponent {...this.props} {...routeProps} />;\n          }}\n        />\n      );\n    }\n  };\n};\n","/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2020 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nimport { EditableComponent, MapTo } from \"@adobe/aem-react-editable-components\";\nimport DOMPurify from \"dompurify\";\nimport React from \"react\";\nimport extractModelId from \"../../utils/extract-model-id\";\n\nrequire(\"./Text.css\");\n\n/**\n * Default Edit configuration for the Text component that interact with the Core Text component and sub-types\n *\n * @type EditConfig\n */\nconst TextEditConfig = {\n  emptyLabel: \"Text\",\n\n  isEmpty: function (props) {\n    return !props || !props.text || props.text.trim().length < 1;\n  },\n};\n\nconst Text = (props) => {\n  const richTextContent = () => {\n    return (\n        <div\n            id={extractModelId(props.cqPath)}\n            data-rte-editelement\n            dangerouslySetInnerHTML={{\n              __html: DOMPurify.sanitize(props.text),\n            }}\n        />\n    );\n  };\n\n  const textContent = () => {\n    return <div>{props.text}</div>;\n  };\n\n  return props.richText ? richTextContent() : textContent();\n};\n\nconst EditableText = (props) => {\n  return (\n      <EditableComponent config={TextEditConfig} {...props}>\n        <Text {...props} />\n      </EditableComponent>\n  );\n};\n\nexport default MapTo(\"wknd-spa-react-latest/components/text\")(EditableText);","/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2020 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n/**\n * Extract an id from the cqModel field of given properties\n *\n * @param path - Path to be converted into an id\n * @returns {string|undefined}\n */\nexport default function extractModelId(path) {\n  return path && path.replace(/\\/|:/g, '_');\n}\n","\nimport {\n    MapTo,\n    ResponsiveGrid\n} from '@adobe/aem-react-editable-components';\nimport React from 'react';\nimport {EditableComponent} from \"@adobe/aem-react-editable-components\";\nimport {createFormInstance} from \"@aemforms/af-core\";\nimport {FormContext} from \"@aemforms/af-react-renderer\";\n\nconst EditableAdaptiveForm = (props) => {\n    const FormContainerEditConfig = {\n        emptyLabel:  'Adaptive Form Container',\n        isEmpty: function (props) {\n            return props.cqItems == null || props.cqItems.length === 0;\n        }\n    };\n    const {model} = props;\n    // create runtime form state from json\n    const form = createFormInstance(model);\n    props.model = form.getState();\n    // data-cmp-path and data-cmp-is required for some editor functionality to work\n    // check github documentation\n    // EditableComponent is required to make the component editable (ie) refresh in case of dialog changes\n    return (\n        <EditableComponent config={FormContainerEditConfig} {...props}>\n            <FormContext.Provider value={{form: form, modelId: form.getUniqueId()}}>\n                <form\n                    data-cmp-path={props?.model?.properties?.[\"fd:path\"]}\n                    data-cmp-is=\"adaptiveFormContainer\">\n                    {props?.model?.label?.value ?<h2>{props.model.label.value}</h2> : null}\n                    <ResponsiveGrid\n                        config={FormContainerEditConfig} {...props}>\n                    </ResponsiveGrid>\n                </form>\n            </FormContext.Provider>\n        </EditableComponent>);\n};\n\n\nexport default MapTo(\"wknd-spa-react-latest/components/adaptiveForm/formcontainer\")(EditableAdaptiveForm);\n","import React from 'react';\nimport {  Input, FormControl, FormLabel, Text, Tooltip, InputGroup, InputRightElement, Button } from '@chakra-ui/react';\nimport {useRuleEngine} from '@aemforms/af-react-renderer';\nimport {EditableComponent, MapTo} from \"@adobe/aem-react-editable-components\";\nimport { AuthoringUtils} from \"@adobe/aem-spa-page-model-manager\";\n\nconst InputWrapper = (props) => {\n    const {\n        id,\n        size = \"lg\",\n        showPassword = true,\n        autoComplete = \"off\",\n        errorBorderColor = \"crimson\",\n    } = props;\n    return (\n        <Input\n            id={id}\n            size={size}\n            autoComplete={autoComplete}\n            errorBorderColor={errorBorderColor}\n            type={showPassword ? \"text\" : \"password\"}\n            {...props}\n        />\n    );\n};\n\nconst InputGroupWrapper = (props) => {\n    const {\n        showPassword = false,\n        inputTypePassword = false,\n        handlerShowHidePassword = () => {},\n    } = props;\n    return inputTypePassword ? (\n        <InputGroup>\n            <InputWrapper {...props} />\n            <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handlerShowHidePassword}>\n                    {showPassword ? \"Hide\" : \"Show\"}\n                </Button>\n            </InputRightElement>\n        </InputGroup>\n    ) : (\n        <InputWrapper {...props} />\n    );\n};\n\nconst TextFieldComponent = (props) => {\n    const {\n        id,\n        error,\n        label,\n        value,\n        format,\n        required,\n        readOnly,\n        maxLength,\n        properties,\n        placeholder,\n        description,\n        errorMessage,\n    } = props;\n\n    const { inputType } = properties || {};\n    const [show, setShow] = React.useState(false);\n    const handleClick = () => setShow(!show);\n\n    const keyChangeFn = (event) => {\n        let thisVal = event.target.value;\n        const textValLen = thisVal?.length;\n        if (format === \"date\") {\n            if (event?.keyCode && event.keyCode !== 8) {\n                if (textValLen === 4 || textValLen === 7) {\n                    thisVal += \"-\";\n                    event.target.value = thisVal;\n                }\n            }\n        } else if (properties?.format === \"ssn\" || properties?.format === \"zip\") {\n            if (event?.keyCode && event.keyCode !== 8) {\n                const zipCheck = properties.format === \"zip\" && textValLen === 5;\n                const ssnCheck =\n                    properties.format === \"ssn\" && (textValLen === 3 || textValLen === 7);\n                if (ssnCheck || zipCheck) {\n                    thisVal += \"-\";\n                }\n                event.target.value = thisVal;\n            }\n            const newVal = thisVal.replace(/-/g, \"\");\n            props.onChange(newVal);\n            return true;\n        }\n        props.onChange(thisVal);\n    };\n\n    const handleChange = (event) => {\n        let thisVal = event.target.value;\n        if (maxLength && thisVal.length === maxLength + 1) {\n            return;\n        }\n        keyChangeFn(event);\n    };\n\n    const handleKeyDown = (event) => {\n        keyChangeFn(event);\n    };\n\n    const handleBlur = (event) => {\n        props.onBlur(event.target.value);\n    };\n\n    const checkIsValidField =\n        errorMessage !== undefined ? errorMessage.length > 0 : false;\n\n    const component = (\n        <InputGroupWrapper\n            value={value}\n            onBlur={handleBlur}\n            isReadOnly={readOnly}\n            isRequired={required}\n            onChange={handleChange}\n            placeholder={placeholder}\n            onKeyDown={handleKeyDown}\n            isInvalid={checkIsValidField}\n            handlerShowHidePassword={handleClick}\n            inputTypePassword={inputType === \"password\"}\n            showPassword={inputType === \"password\" ? !!show : true}\n        />\n    );\n\n    return props.visible ? (\n        <FormControl isInvalid={error} mb={30}>\n            <FormLabel htmlFor={id}>\n                {label.value} {label.value && required ? \"*\" : \"\"}\n            </FormLabel>\n            {description?.length ? (\n                <Tooltip label={description}>{component}</Tooltip>\n            ) : (\n                component\n            )}\n            <Text mb=\"8px\" color={\"crimson\"}>\n                {errorMessage}\n            </Text>\n        </FormControl>\n    ) : null;\n};\n\n\n\nconst TextFieldComp = props => {\n    const {isInEditor} = props;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [state, handlers] = useRuleEngine(props);\n    let convertedProps = state; // we add some default values in the model which is required here\n    if (!isInEditor) {\n        // don't add form change or blur listeners  authoring, so that AEM listeners work\n        convertedProps = {\n            onChange: handlers.dispatchChange,\n            onBlur: handlers.dispatchChange,\n            ...state\n        };\n    }\n    return (\n        <TextFieldComponent {...convertedProps} />\n    );\n}\n\nconst TextFieldEditConfig = {\n    emptyLabel: 'Text Field',\n    isEmpty: function (props) {\n        return !props;\n    }\n};\n\nconst EditableTextField = (props) => {\n    let isInEditor = AuthoringUtils.isInEditor();\n    const newProps = {\n        isInEditor,\n        ...props\n    };\n    return (\n        <EditableComponent config={TextFieldEditConfig} {...newProps}>\n            <TextFieldComp {...newProps} />\n        </EditableComponent>\n    );\n};\n\nexport default MapTo('wknd-spa-react-latest/components/adaptiveForm/textinput')(EditableTextField);\n","import { SimpleGrid } from '@chakra-ui/react'\nimport React from 'react';\nimport {EditableComponent, MapTo, ResponsiveGrid} from \"@adobe/aem-react-editable-components\";\nimport {useRuleEngine} from '@aemforms/af-react-renderer';\n\nconst EditablePanel = (props) => {\n    const {model} = props; // get the adaptive form json from props\n    const [state, handlers] = useRuleEngine(model);\n    const {\n        layout\n    } = state?.properties || {};\n    const { columns = \"\", className = \"\" } = layout || {};\n    const {id} = state;\n    const PanelEditConfig = {\n        emptyLabel:  'Adaptive Form Panel',\n        isEmpty: function (props) {\n            return props.cqItems == null || props.cqItems.length === 0;\n        }\n    };\n    if (model.visible) {\n        return (<EditableComponent config={PanelEditConfig} {...props}>\n            <SimpleGrid\n                columnGap={10}\n                columns={columns}\n                colorScheme=\"blue\"\n                className={className}>\n                <ResponsiveGrid\n                    config={PanelEditConfig} {...props}>\n                </ResponsiveGrid>\n            </SimpleGrid>\n        </EditableComponent>);\n    } else {\n        return null;\n    }\n};\n\nexport default MapTo(\"wknd-spa-react-latest/components/adaptiveForm/panelcontainer\")(EditablePanel);\n","import { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {useRuleEngine} from \"@aemforms/af-react-renderer\";\nimport {AuthoringUtils} from \"@adobe/aem-spa-page-model-manager\";\nimport {EditableComponent, MapTo} from \"@adobe/aem-react-editable-components\";\n\n// chakra button\nconst ButtonComponent = ({\n                             label,\n                             onClick,\n                             enabled,\n                             className,\n                             properties,\n                         }) => {\n\n    const handleClick = (event) => {\n        onClick(event);\n    };\n    return (\n        <Button\n            size=\"md\"\n            height=\"48px\"\n            width={properties?.marginTnB === false ? \"25%\" : \"100%\"}\n            border=\"2px\"\n            colorScheme=\"blue\"\n            onClick={handleClick}\n            className={className}\n            disabled={!enabled}\n            mt={properties?.marginTnB === false ? \"0\" : \"30\"}\n            mb={properties?.marginTnB === false ? \"0\" : \"30\"}\n        >\n            {label.value}\n        </Button>\n    );\n};\n\n// adaptive form button wrapper\n// abstract business logic to interact with adaptive form rules\nconst ButtonCompWrapper = props => {\n    const {isInEditor} = props;\n    let convertedProps = props;\n    if (!isInEditor) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const [state, handlers] = useRuleEngine(props);\n        convertedProps = {\n            onClick: handlers.dispatchClick,\n            ...state\n        };\n    }\n    return (\n        <ButtonComponent {...convertedProps} />\n    );\n}\n\nconst ButtonEditConfig = {\n    emptyLabel: 'Button',\n    isEmpty: function (props) {\n        return !props;\n    }\n};\n\n// editable button\n// abstracts business logic to interact with aem editor\nconst EditableButton = (props) => {\n    let isInEditor = AuthoringUtils.isInEditor();\n    const newProps = {\n        isInEditor,\n        ...props\n    };\n    return (\n        <EditableComponent config={ButtonEditConfig} {...newProps}>\n            <ButtonCompWrapper {...newProps} />\n        </EditableComponent>\n    );\n};\n\nexport default MapTo('wknd-spa-react-latest/components/adaptiveForm/button')(EditableButton);","import 'react-app-polyfill/stable';\nimport 'react-app-polyfill/ie9';\nimport 'custom-event-polyfill';\n\nimport { Constants, ModelManager } from '@adobe/aem-spa-page-model-manager';\nimport { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport LocalDevModelClient from './LocalDevModelClient';\nimport './components/import-components';\nimport './index.css';\n\nconst modelManagerOptions = {};\nif(process.env.REACT_APP_PROXY_ENABLED) {\n    modelManagerOptions.modelClient = new LocalDevModelClient(process.env.REACT_APP_API_HOST);\n}\n\nconst renderApp = () => {\n    ModelManager.initialize(modelManagerOptions).then(pageModel => {\n        const history = createBrowserHistory();\n        render(\n            <Router history={history}>\n                <App\n                    history={history}\n                    cqChildren={pageModel[Constants.CHILDREN_PROP]}\n                    cqItems={pageModel[Constants.ITEMS_PROP]}\n                    cqItemsOrder={pageModel[Constants.ITEMS_ORDER_PROP]}\n                    cqPath={pageModel[Constants.PATH_PROP]}\n                    locationPathname={window.location.pathname}\n                />\n            </Router>,\n            document.getElementById('spa-root')\n        );\n    });\n};\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    renderApp();\n});\n"],"sourceRoot":""}